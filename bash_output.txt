Commande: /bin/ls
 
Makefile
README.md
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
minishell
minishell_output.txt
minishell_tester
not_existing
notexisting
outfile
output.txt
src
test_commands.txt
test_lucas
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 0
0

Commande: 


Commande: echo 0
0

Commande: /bin/ls -al
total 2044
-rw-r--r--  1 seblin seblin      27 Feb 18 16:54  
drwxr-xr-x 10 seblin seblin    4096 Feb 19 22:36 .
drwxr-xr-x 11 seblin seblin    4096 Jan 29 20:52 ..
drwxr-xr-x  8 seblin seblin    4096 Feb 19 22:20 .git
-rw-r--r--  1 seblin seblin      55 Feb 18 16:49 .gitignore
drwxr-xr-x  2 seblin seblin    4096 Feb 17 18:33 .vscode
-rw-r--r--  1 seblin seblin    3203 Feb 19 22:35 Makefile
-rw-r--r--  1 seblin seblin     786 Feb 10 14:43 README.md
-rw-r--r--  1 seblin seblin   50859 Feb  3 18:34 allowed_functions.md
-rw-r--r--  1 seblin seblin     500 Feb 19 22:36 bash_output.txt
-rwxr-xr-x  1 seblin seblin    4675 Feb 18 16:54 compare_bash_and_minishell.sh
-rw-r--r--  1 seblin seblin   27775 Feb  3 18:53 correct_output.txt
-rw-r--r--  1 seblin seblin   59401 Feb  3 18:34 diff_output.txt
-rw-r--r--  1 seblin seblin 1568461 Jan 26 11:14 en.subject.pdf
-rw-r--r--  1 seblin seblin   90973 Feb 14 15:59 eval_minishell.pdf
-rw-r--r--  1 seblin seblin       0 Feb 19 18:25 fichiernul
-rw-r--r--  1 seblin seblin       0 Feb 19 18:25 fichiernulachier
-rw-r--r--  1 seblin seblin    1595 Feb 19 22:36 file1
-rw-r--r--  1 seblin seblin       0 Feb 19 22:36 fileout
-rwxr-xr-x  1 seblin seblin    7860 Feb 19 18:48 gnl_compare_bash_and_minishell.sh
drwxr-xr-x  3 seblin seblin    4096 Feb 19 19:56 includes
drwxr-xr-x  5 seblin seblin    4096 Jan 25 18:43 lib
-rwxr-xr-x  1 seblin seblin  163176 Feb 19 22:36 minishell
-rw-r--r--  1 seblin seblin     500 Feb 19 22:36 minishell_output.txt
drwxr-xr-x  6 seblin seblin    4096 Feb 13 19:37 minishell_tester
-rw-r--r--  1 seblin seblin       6 Feb 14 14:05 not_existing
-rw-r--r--  1 seblin seblin     414 Feb 14 16:56 notexisting
-rw-r--r--  1 seblin seblin      25 Feb 19 22:36 outfile
-rw-r--r--  1 seblin seblin     126 Feb 14 14:02 output.txt
drwxr-xr-x  5 seblin seblin    4096 Feb 19 22:35 src
-rw-r--r--  1 seblin seblin     217 Feb  7 18:14 test_commands.txt
drwxr-xr-x  6 seblin seblin    4096 Feb 19 21:56 test_lucas
drwxr-xr-x  2 seblin seblin    4096 Feb 19 18:25 tester_minishell
-rw-r--r--  1 seblin seblin      38 Feb 17 12:46 testfile
-rwxr-xr-x  1 seblin seblin    2595 Feb 14 14:02 tests.sh
-rw-r--r--  1 seblin seblin    2866 Feb 14 14:05 to_test
-rw-r--r--  1 seblin seblin      70 Feb  3 18:34 valgrind.supp

Commande: echo 0
0

Commande: grep -i 'return' src/main.c
		return (display_error("Error\n", NULL, NULL), 255);
		return (display_error("Error\n", NULL, NULL), free_data(data), 255);
		return (free_data(data), display_error("Usage: ./minishell\n", NULL, NULL), 255);
		return (free_data(data), 0);
	return (0);
			return (ft_printf("exit\n"), 0);
			// return (0);
	return (1);
 * 0 is returned, and the data struct is freed in calling function
	int	return_pipex;
		return (1);
		return (free_command_tab(cmd_tab), 1);
		return (exec_cd(data, cmd_tab), 1);
		return (exec_env(data, cmd_tab), 1);
		return (exec_pwd(data), 1);
		return (exec_echo(data, cmd_tab), 1);
		return (exec_unset(data, cmd_tab), 1);
		return (exec_export(cmd_tab, data), 1);
	return (0);
		return (NULL);
			return (NULL);
	return (envp_tab);

Commande: echo 0
0

Commande: /usr/bin/cat testfile
test
motif olala
motif nononon
p√¥uet

Commande: echo 0
0

Commande: /bin/grep -i motif /testfile
/bin/grep: /testfile: No such file or directory

Commande: echo 0
0

Commande: /bin/chmod 755 /testfile
/bin/chmod: cannot access '/testfile': No such file or directory

Commande: echo 0
0

Commande: /bin/cp /testfile /includes/mon_fichier.txt
/bin/cp: cannot stat '/testfile': No such file or directory

Commande: echo 0
0

Commande: /bin/mv /testfile /includes/mon_fichier.txt
/bin/mv: cannot stat '/testfile': No such file or directory

Commande: echo 0
0

Commande: echo bonjour
bonjour

Commande: echo 0
0

Commande: echo     	


Commande: echo 0
0

Commande: echo


Commande: echo 0
0

Commande: echo -n au revoir
au revoir

Commande: echo 0
0

Commande: ls -a | rev
 
.
..
tig.
erongitig.
edocsv.
elifekaM
dm.EMDAER
dm.snoitcnuf_dewolla
txt.tuptuo_hsab
hs.llehsinim_dna_hsab_erapmoc
txt.tuptuo_tcerroc
txt.tuptuo_ffid
fdp.tcejbus.ne
fdp.llehsinim_lave
lunreihcif
reihcalunreihcif
1elif
tuoelif
hs.llehsinim_dna_hsab_erapmoc_lng
sedulcni
bil
llehsinim
txt.tuptuo_llehsinim
retset_llehsinim
gnitsixe_ton
gnitsixeton
eliftuo
txt.tuptuo
crs
txt.sdnammoc_tset
sacul_tset
llehsinim_retset
eliftset
hs.stset
tset_ot
ppus.dnirglav

Commande: echo 0
0

Commande: exit 42


Commande: echo 0
0

Commande: exit 42hgzef
./compare_bash_and_minishell.sh: line 189: exit: 42hgzef: numeric argument required

Commande: echo 0
0

Commande: exit 42 jhgzegf
./compare_bash_and_minishell.sh: line 189: exit: too many arguments

Commande: echo 0
0

Commande: exit jhzef
./compare_bash_and_minishell.sh: line 189: exit: jhzef: numeric argument required

Commande: echo 0
0

Commande: ls -a
 
.
..
.git
.gitignore
.vscode
Makefile
README.md
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
minishell
minishell_output.txt
minishell_tester
not_existing
notexisting
outfile
output.txt
src
test_commands.txt
test_lucas
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 0
0

Commande: <noexist cat
./compare_bash_and_minishell.sh: line 189: noexist: No such file or directory

Commande: echo 0
0

Commande: bin/ls fichiernulachier
./compare_bash_and_minishell.sh: line 189: bin/ls: No such file or directory

Commande: echo 0
0

Commande: echo 0 + 0
0 + 0

Commande: echo 0
0

Commande: ls includes
ls
minishell.h
parsing
pipex_setup.h

Commande: echo 0
0

Commande: echo "cat lol.c | cat > lol.c"
cat lol.c | cat > lol.c

Commande: echo 0
0

Commande: ls inclu"des"
ls
minishell.h
parsing
pipex_setup.h

Commande: echo 0
0

Commande: l's' '-'l
total 2032
-rw-r--r-- 1 seblin seblin      27 Feb 18 16:54  
-rw-r--r-- 1 seblin seblin    3203 Feb 19 22:35 Makefile
-rw-r--r-- 1 seblin seblin     786 Feb 10 14:43 README.md
-rw-r--r-- 1 seblin seblin   50859 Feb  3 18:34 allowed_functions.md
-rw-r--r-- 1 seblin seblin    6374 Feb 19 22:36 bash_output.txt
-rwxr-xr-x 1 seblin seblin    4675 Feb 18 16:54 compare_bash_and_minishell.sh
-rw-r--r-- 1 seblin seblin   27775 Feb  3 18:53 correct_output.txt
-rw-r--r-- 1 seblin seblin   59401 Feb  3 18:34 diff_output.txt
-rw-r--r-- 1 seblin seblin 1568461 Jan 26 11:14 en.subject.pdf
-rw-r--r-- 1 seblin seblin   90973 Feb 14 15:59 eval_minishell.pdf
-rw-r--r-- 1 seblin seblin       0 Feb 19 18:25 fichiernul
-rw-r--r-- 1 seblin seblin       0 Feb 19 18:25 fichiernulachier
-rw-r--r-- 1 seblin seblin    1595 Feb 19 22:36 file1
-rw-r--r-- 1 seblin seblin       0 Feb 19 22:36 fileout
-rwxr-xr-x 1 seblin seblin    7860 Feb 19 18:48 gnl_compare_bash_and_minishell.sh
drwxr-xr-x 3 seblin seblin    4096 Feb 19 19:56 includes
drwxr-xr-x 5 seblin seblin    4096 Jan 25 18:43 lib
-rwxr-xr-x 1 seblin seblin  163176 Feb 19 22:36 minishell
-rw-r--r-- 1 seblin seblin    6052 Feb 19 22:36 minishell_output.txt
drwxr-xr-x 6 seblin seblin    4096 Feb 13 19:37 minishell_tester
-rw-r--r-- 1 seblin seblin       6 Feb 14 14:05 not_existing
-rw-r--r-- 1 seblin seblin     414 Feb 14 16:56 notexisting
-rw-r--r-- 1 seblin seblin      25 Feb 19 22:36 outfile
-rw-r--r-- 1 seblin seblin     126 Feb 14 14:02 output.txt
drwxr-xr-x 5 seblin seblin    4096 Feb 19 22:35 src
-rw-r--r-- 1 seblin seblin     217 Feb  7 18:14 test_commands.txt
drwxr-xr-x 6 seblin seblin    4096 Feb 19 21:56 test_lucas
drwxr-xr-x 2 seblin seblin    4096 Feb 19 18:25 tester_minishell
-rw-r--r-- 1 seblin seblin      38 Feb 17 12:46 testfile
-rwxr-xr-x 1 seblin seblin    2595 Feb 14 14:02 tests.sh
-rw-r--r-- 1 seblin seblin    2866 Feb 14 14:05 to_test
-rw-r--r-- 1 seblin seblin      70 Feb  3 18:34 valgrind.supp

Commande: echo 0
0

Commande: ls 
 
Makefile
README.md
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
minishell
minishell_output.txt
minishell_tester
not_existing
notexisting
outfile
output.txt
src
test_commands.txt
test_lucas
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 'seblin'
seblin

Commande: echo 0
0

Commande: cat includes/minishell.h
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dan <dan@student.42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/12 08:59:03 by dan               #+#    #+#             */
/*   Updated: 2024/02/19 19:10:53 by dan              ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include <sys/wait.h>
# include <sys/types.h>
# include <signal.h>
# include <stdio.h>
# include <stdbool.h>
# include <stdio.h>
# include <unistd.h>
# include <stdlib.h>
# include "../lib/ft_printf/ft_printf.h"
# include "../lib/libft/libft.h"
// # include "../lib/get_next_line/get_next_line.h"
# include <readline/readline.h>
# include <readline/history.h>
# include "parsing_utils.h"

typedef struct t_Data
{
	char	**envp_tab;
	int		exit_status;
}	t_Data;

void	handle_signals(void);
int		prompt_loop(t_Data *data, char *envp[]);
void	display_error(char *str, char *details, char *str2);
void	free_data(t_Data *data);
void	close_minishell(t_Data *data);
void	exec_env(t_Data *data, char **command_tab);
int		command_is_builtin(char	*cmd[], t_Data *data, char *envp[]);
void	exec_pwd(t_Data *data);
int		exec_cd(t_Data *data, char **command_tab);
void	exec_echo(t_Data *data, char **command_tab);
void	exec_unset(t_Data *data, char **command_tab);
void	free_command_tab(char **command_tab);
char	**duplicate_envp(t_Data *data, char *envp[]);
int		exec_export(char **command_tab, t_Data *data);

/*   exec_export.c                                  :+:      :+:    :+:   */
void	add_env_var_to_envp_tab(char **command_tab, t_Data *data, int *i);
char	**create_new_env_var(char **envp, char *env_var);
char	*get_env_var(t_Data *data, char *to_find);
void	display_export_tab(char export_tab[][500]);
void	create_export_tab(t_Data *data, char export_tab[][500]);

/*   exec_echo.c                                  :+:      :+:    :+:   */
int	is_only_space(char *str);

/*   exec_exit.c                                  :+:      :+:    :+:   */
int	str_is_digit(char *str);

/*   exec_unset.c                                  :+:      :+:    :+:   */
void	unset_var(char **envp, int index);


void		free_command_tab_lg(char ***command_tab);
int			pipex(char **argv[], char *envp[]);
t_ast_nde	*copy_node_child(t_ast_nde *node);

/*   exec_pipex.c                                       :+:      :+:    :+:   */
char		**parse_cmd(char **command, char **env);
t_ast_nde	*parse(char *str, t_Data *data);
void		launch_command_tab(t_Data *data, t_ast_nde *node,
				char *envp[], int flag);
int			wilcard_func(char *pattern);


/*   handle_signals.c                                   :+:      :+:    :+:   */
static void	sigint_handler(int signum);
static void	sigquit_handler(int signum);
#endif

Commande: echo 0
0

Commande: echo 0
0

Commande: echo papa >> file1


Commande: echo 0
0

Commande: echo maman >> file1


Commande: echo 0
0

Commande: cat file1
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
maman
papa
maman
papa
maman
papa
maman
papa
papa
maman
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman

Commande: echo 0
0

Commande: cat file1 | grep papa | more
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa

Commande: echo 0
0

Commande: << end cat|>fileout
./compare_bash_and_minishell.sh: line 189: warning: here-document at line 189 delimited by end-of-file (wanted `end')

Commande: echo 0
0

Commande: ls fichiernul | grep bla | more


Commande: echo 0
0

Commande: export VAR=tamaman


Commande: echo 0
0

Commande: echo 


Commande: echo 0
0

Commande: echo 


Commande: unset VAR


Commande: echo 0
0

Commande: echo 


Commande: echo 0
0

Commande: unset PATH


Commande: echo 0
0

Commande: ls
 
Makefile
README.md
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
minishell
minishell_output.txt
minishell_tester
not_existing
notexisting
outfile
output.txt
src
test_commands.txt
test_lucas
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 0
0

Commande: cd ..


Commande: pwd
/home/seblin/42/42_minishell

Commande: echo 0
0

Commande: cd


Commande: echo 0
0

Commande: pwd
/home/seblin/42/42_minishell

Commande: echo 0
0

Commande: pwd kzbgkbzekgb
/home/seblin/42/42_minishell

Commande: echo 0
0

Commande: pwd kzbg  kbzekgb
/home/seblin/42/42_minishell

Commande: echo 0
0

Commande: pwd 42 bzekgb
/home/seblin/42/42_minishell

Commande: echo 0
0

Commande: cat includes/minishell.h
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dan <dan@student.42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/12 08:59:03 by dan               #+#    #+#             */
/*   Updated: 2024/02/19 19:10:53 by dan              ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include <sys/wait.h>
# include <sys/types.h>
# include <signal.h>
# include <stdio.h>
# include <stdbool.h>
# include <stdio.h>
# include <unistd.h>
# include <stdlib.h>
# include "../lib/ft_printf/ft_printf.h"
# include "../lib/libft/libft.h"
// # include "../lib/get_next_line/get_next_line.h"
# include <readline/readline.h>
# include <readline/history.h>
# include "parsing_utils.h"

typedef struct t_Data
{
	char	**envp_tab;
	int		exit_status;
}	t_Data;

void	handle_signals(void);
int		prompt_loop(t_Data *data, char *envp[]);
void	display_error(char *str, char *details, char *str2);
void	free_data(t_Data *data);
void	close_minishell(t_Data *data);
void	exec_env(t_Data *data, char **command_tab);
int		command_is_builtin(char	*cmd[], t_Data *data, char *envp[]);
void	exec_pwd(t_Data *data);
int		exec_cd(t_Data *data, char **command_tab);
void	exec_echo(t_Data *data, char **command_tab);
void	exec_unset(t_Data *data, char **command_tab);
void	free_command_tab(char **command_tab);
char	**duplicate_envp(t_Data *data, char *envp[]);
int		exec_export(char **command_tab, t_Data *data);

/*   exec_export.c                                  :+:      :+:    :+:   */
void	add_env_var_to_envp_tab(char **command_tab, t_Data *data, int *i);
char	**create_new_env_var(char **envp, char *env_var);
char	*get_env_var(t_Data *data, char *to_find);
void	display_export_tab(char export_tab[][500]);
void	create_export_tab(t_Data *data, char export_tab[][500]);

/*   exec_echo.c                                  :+:      :+:    :+:   */
int	is_only_space(char *str);

/*   exec_exit.c                                  :+:      :+:    :+:   */
int	str_is_digit(char *str);

/*   exec_unset.c                                  :+:      :+:    :+:   */
void	unset_var(char **envp, int index);


void		free_command_tab_lg(char ***command_tab);
int			pipex(char **argv[], char *envp[]);
t_ast_nde	*copy_node_child(t_ast_nde *node);

/*   exec_pipex.c                                       :+:      :+:    :+:   */
char		**parse_cmd(char **command, char **env);
t_ast_nde	*parse(char *str, t_Data *data);
void		launch_command_tab(t_Data *data, t_ast_nde *node,
				char *envp[], int flag);
int			wilcard_func(char *pattern);


/*   handle_signals.c                                   :+:      :+:    :+:   */
static void	sigint_handler(int signum);
static void	sigquit_handler(int signum);
#endif

Commande: echo 0
0

Commande: cat ../../42/minishell_common/includes/minishell.h
cat: ../../42/minishell_common/includes/minishell.h: No such file or directory

Commande: echo 0
0

Commande: <testfile cat | rev > outfile


Commande: echo 0
0

Commande: cat <testfile
test
motif olala
motif nononon
p√¥uet

Commande: echo 0
0

Commande: <outfile cat
tset
alalo fitom
nononon fitom
teu√¥p

Commande: echo 0
0

Commande: <testfile cat | echo niania | rev > outfile


Commande: echo 0
0

Commande: <outfile cat
ainain

Commande: echo 0
0

Commande: <testfile cat | echeo niania | rev > outfile
./compare_bash_and_minishell.sh: line 189: echeo: command not found

Commande: echo 0
0

Commande: <outfile cat
dnuof ton dnammoc :oehce

Commande: echo 0
0

Commande: echo aaa && echo bbb || echo ccc
aaa
bbb

Commande: echo 0
0

Commande: echo aaa || echo bbb || echo ccc
aaa

Commande: echo 0
0

Commande: echo 0
0

Commande: false && echo bbb || echo ccc
ccc

Commande: echo 0
0

Commande: false || echo bbb || echo ccc
bbb

Commande: echo 0
0

Commande: false && echo bbb && echo ccc


Commande: echo 0
0

Commande: echo aaa && false && echo ccc
aaa

Commande: echo 0
0

Commande: <<end <<end
./compare_bash_and_minishell.sh: line 189: warning: here-document at line 189 delimited by end-of-file (wanted `end')
./compare_bash_and_minishell.sh: line 189: warning: here-document at line 189 delimited by end-of-file (wanted `end')

Commande: <<end cat
./compare_bash_and_minishell.sh: line 189: warning: here-document at line 189 delimited by end-of-file (wanted `end')

Commande: <<end
./compare_bash_and_minishell.sh: line 189: warning: here-document at line 189 delimited by end-of-file (wanted `end')

Commande: echo 0
0

Commande: echo /bin/bash
/bin/bash

Commande: echo 0
0

Commande: echo seblin/bin/bash$
seblin/bin/bash$

Commande: echo 0
0

Commande: echo seblin/bin/bash
seblin/bin/bash

Commande: echo 0
0

Commande: echo seblin   /bin/bash $
seblin /bin/bash $

Commande: echo 0
0

Commande: echo 'seblin/bin/bash$'
seblin/bin/bash$

Commande: echo 0
0

Commande: echo seblin /bin/bash $ 
seblin /bin/bash $

Commande: echo 0
0

Commande: echo seblin/bin/bash
seblin/bin/bash

Commande: echo 0
0

Commande: echo "seblin$  SHELL $ "
seblin$  SHELL $ 

Commande: echo 0
0

Commande: echo "trrtseblin$   SHELL $ "
trrtseblin$   SHELL $ 

Commande: echo 0
0

Commande: echo "trrtseblin   SHELL $ "
trrtseblin   SHELL $ 

Commande: echo 0
0

Commande: echo "trrtseblin SHELL $ "
trrtseblin SHELL $ 

Commande: echo 0
0

Commande: echo trrtseblin$   SHELL $ 
trrtseblin$ SHELL $

Commande: echo 0
0

Commande: echo "trrtseblin'Mach' $'LOGNAME'  SHELL $ "
trrtseblin'Mach' $'LOGNAME'  SHELL $ 

Commande: echo 0
0

Commande: echo "trrt'Mach' seblin'Mach' $'LOGNA'M''E'  SHELL $ "
trrt'Mach' seblin'Mach' $'LOGNA'M''E'  SHELL $ 

Commande: echo 0
0

Commande: echo "trrt'Mach'p louseblin'Mach' $'LOGNA'M''E'42  SHELL $ "
trrt'Mach'p louseblin'Mach' $'LOGNA'M''E'42  SHELL $ 

Commande: echo 0
0

Commande: echo "seblin"
seblin

Commande: echo 0
0

Commande: echo seblin
seblin

Commande: echo 0
0

