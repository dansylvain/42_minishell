Commande: env | sort | grep -v SHLVL | grep -v ^_


Commande: cat minishell.h | grep ");"$
/usr/bin/cat: minishell.h: No such file or directory

Commande: export GHOST=123 | env | grep GHOST


Commande: grep hi "<infile" <         ./test_files/infile
No such file or directory: ./test_files/infile

Commande: grep hi "<infile" <         ./test_files/infile
No such file or directory: ./test_files/infile

Commande: echo hi < ./test_files/infile bye bye


Commande: echo <"./test_files/infile" "bonjour       42"


Commande: cat <./test_files/infile_big ./test_files/infile


Commande: echo <"./test_files/infile" <missing <"./test_files/infile"


Commande: echo <missing <"./test_files/infile" <missing


Commande: cat <"./test_files/infile_big" | cat <"./test_files/infile"
No such file or directory: ./test_files/infile_big

Commande: echo hi | cat <"./test_files/infile"
No such file or directory: ./test_files/infile

Commande: cat <"./test_files/infile" | echo hi
No such file or directory: ./test_files/infile

Commande: cat <"./test_files/infile" | grep hello
No such file or directory: ./test_files/infile

Commande: cat <missing | cat
No such file or directory: missing

Commande: cat <missing | echo oi
No such file or directory: missing

Commande: cat <missing | cat <"./test_files/infile"
No such file or directory: missing

Commande: echo <123 <456 hi | echo 42


Commande: echo hi >         ./outfiles/outfile01 bye


Commande: ls >"./outfiles/outfile with spaces"
No such file or directory: ./outfiles/outfile with spaces

Commande: ls >"./outfiles/outfile""1""2""3""4""5"
No such file or directory: ./outfiles/outfile12345

Commande: echo hi >./outfiles/outfile01 | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi >./outfiles/outfile01 >>./outfiles/outfile02 | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi | echo >./outfiles/outfile01 bye


Commande: echo hi >>./outfiles/outfile01 | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi >./outfiles/outfile01 >>./test_files/invalid_permission | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi >./test_files/invalid_permission | echo bye
No such file or directory: ./test_files/invalid_permission

Commande: echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye
No such file or directory: ./test_files/invalid_permission

Commande: echo hi | echo bye >>./test_files/invalid_permission
No such file or directory: ./test_files/invalid_permission

Commande: echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission
No such file or directory: ./outfiles/outfile01

Commande: echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01
No such file or directory: ./test_files/invalid_permission

Commande: cat <"./test_files/infile" >./test_files/invalid_permission
No such file or directory: ./test_files/infile

Commande: cat >./test_files/invalid_permission <"./test_files/infile"
No such file or directory: ./test_files/invalid_permission

Commande: cat <missing >./outfiles/outfile01
No such file or directory: missing

Commande: cat >./outfiles/outfile01 <missing
No such file or directory: ./outfiles/outfile01

Commande: cat <missing >./test_files/invalid_permission
No such file or directory: missing

Commande: cat >./test_files/invalid_permission <missing
No such file or directory: ./test_files/invalid_permission

Commande: cat >./outfiles/outfile01 <missing >./test_files/invalid_permission
No such file or directory: ./outfiles/outfile01

Commande: ls >>./test_files/invalid_permission >>./outfiles/outfile02
No such file or directory: ./test_files/invalid_permission

Commande: ls >>./test_files/invalid_permission >>./outfiles/outfile01
No such file or directory: ./test_files/invalid_permission

Commande: ls >>./outfiles/outfile01 >>./test_files/invalid_permission
No such file or directory: ./outfiles/outfile01

Commande: ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02
No such file or directory: ./outfiles/outfile01

Commande: ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02
No such file or directory: missing

Commande: ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing
No such file or directory: ./test_files/invalid_permission

Commande: echo hi >>./outfiles/outfile01 | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye
No such file or directory: ./outfiles/outfile01

Commande: echo hi | echo >>./outfiles/outfile01 bye


Commande: echo hi >>./test_files/invalid_permission | echo bye
No such file or directory: ./test_files/invalid_permission

Commande: echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye
No such file or directory: ./test_files/invalid_permission

Commande: echo hi | echo bye >>./test_files/invalid_permission
No such file or directory: ./test_files/invalid_permission

Commande: echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission


Commande: cat <minishell.h>./outfiles/outfile
No such file or directory: minishell.h

Commande: cat <minishell.h|ls
No such file or directory: minishell.h

Commande: ./test_files/invalid_permission
./test_files/invalid_permission: command not found

Commande: missing.out
missing.out: command not found

Commande: ./test_files
./test_files: command not found

Commande: /test_files
/test_files: command not found

Commande: minishell.h
minishell.h: command not found

Commande: $
$: command not found

Commande: 0
0: command not found

Commande: README.md
README.md: command not found

Commande: /bin/ls
 
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
Makefile
minishell
minishell_output.txt
not_existing
notexisting
outfile
output.txt
README.md
src
test_commands.txt
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 0
0

Commande: 


Commande: echo 0
0

Commande: /bin/ls -al
total 2052
-rw-rw-r--  1 dan dan      27 févr. 20 08:52  
drwxrwxrwx  8 dan dan    4096 févr. 20 11:10 .
drwxrwxr-x 14 dan dan    4096 févr. 19 14:31 ..
-rw-rw-r--  1 dan dan   50859 févr.  2 14:22 allowed_functions.md
-rw-rw-r--  1 dan dan   13332 févr. 20 11:10 bash_output.txt
-rwxrwxr-x  1 dan dan    7680 févr. 20 10:49 compare_bash_and_minishell.sh
-rw-rw-r--  1 dan dan   27775 févr.  3 18:49 correct_output.txt
-rw-rw-r--  1 dan dan   59401 févr.  3 15:52 diff_output.txt
-rw-rw-r--  1 dan dan 1568461 janv. 26 11:52 en.subject.pdf
-rw-rw-r--  1 dan dan   90973 févr. 14 14:11 eval_minishell.pdf
-rw-rw-r--  1 dan dan       0 févr. 19 17:34 fichiernul
-rw-rw-r--  1 dan dan       0 févr. 19 17:34 fichiernulachier
-rw-rw-r--  1 dan dan    1793 févr. 20 10:49 file1
-rw-rw-r--  1 dan dan       0 févr. 20 10:49 fileout
drwxrwxr-x  8 dan dan    4096 févr. 20 10:52 .git
-rw-rw-r--  1 dan dan      55 févr. 17 19:05 .gitignore
-rwxrwxr-x  1 dan dan    7860 févr. 19 18:48 gnl_compare_bash_and_minishell.sh
drwxrwxr-x  3 dan dan    4096 févr. 20 10:52 includes
drwxrwxr-x  5 dan dan    4096 janv. 25 09:42 lib
-rw-rw-r--  1 dan dan    3059 févr. 20 11:10 Makefile
-rwxrwxr-x  1 dan dan  163752 févr. 20 11:10 minishell
-rw-rw-r--  1 dan dan    6164 févr. 20 11:10 minishell_output.txt
-rw-rw-r--  1 dan dan       6 févr. 14 13:32 not_existing
-rw-rw-r--  1 dan dan     414 févr. 14 18:46 notexisting
-rw-rw-r--  1 dan dan       0 févr. 20 10:49 outfile
-rw-rw-r--  1 dan dan     126 févr. 14 14:07 output.txt
-rw-rw-r--  1 dan dan     786 févr. 18 13:59 README.md
drwxrwxr-x  5 dan dan    4096 févr. 20 11:10 src
-rw-rw-r--  1 dan dan     217 févr.  7 16:59 test_commands.txt
drwxrwxr-x  6 dan dan    4096 févr. 20 10:56 tester_minishell
-rw-rw-r--  1 dan dan      38 févr. 19 09:59 testfile
-rwxrwxr-x  1 dan dan    2595 févr. 14 14:07 tests.sh
-rw-rw-r--  1 dan dan    2866 févr. 14 13:32 to_test
-rw-rw-r--  1 dan dan      70 févr.  2 14:22 valgrind.supp
drwxrwxr-x  2 dan dan    4096 févr. 19 11:42 .vscode

Commande: echo 0
0

Commande: grep -i 'return' src/main.c
		return (display_error("Error\n"), 255);
		return (display_error("Error\n"), free_data(data), 255);
		return (free_data(data), display_error("Usage: ./minishell\n"), 255);
		return (free_data(data), 0);
	return (0);
			return (ft_printf("exit\n"), 0);
			// return (0);
	return (1);
 * 0 is returned, and the data struct is freed in calling function
	int	return_pipex;
		return (1);
		return (free_command_tab(cmd_tab), 1);
		return (exec_cd(data, cmd_tab), 1);
		return (exec_env(data, cmd_tab), 1);
		return (exec_pwd(data), 1);
		return (exec_echo(data, cmd_tab), 1);
		return (exec_unset(data, cmd_tab), 1);
		return (exec_export(cmd_tab, data), 1);
	return (0);
		return (NULL);
			return (NULL);
	return (envp_tab);

Commande: echo 0
0

Commande: /usr/bin/cat testfile
test
motif olala
motif nononon
pôuet

Commande: echo 0
0

Commande: /bin/grep -i motif /testfile
/bin/grep: /testfile: No such file or directory

Commande: echo 0
0

Commande: /bin/chmod 755 /testfile
/bin/chmod: cannot access '/testfile': No such file or directory

Commande: echo 0
0

Commande: /bin/cp /testfile /includes/mon_fichier.txt
/bin/cp: cannot stat '/testfile': No such file or directory

Commande: echo 0
0

Commande: /bin/mv /testfile /includes/mon_fichier.txt
/bin/mv: cannot stat '/testfile': No such file or directory

Commande: echo 0
0

Commande: echo bonjour
bonjour

Commande: echo 0
0

Commande: echo     	


Commande: echo 0
0

Commande: echo


Commande: echo 0
0

Commande: echo -n au revoir


Commande: echo 0
0

Commande: ls -a | rev
 
.
..
dm.snoitcnuf_dewolla
txt.tuptuo_hsab
hs.llehsinim_dna_hsab_erapmoc
txt.tuptuo_tcerroc
txt.tuptuo_ffid
fdp.tcejbus.ne
fdp.llehsinim_lave
lunreihcif
reihcalunreihcif
1elif
tuoelif
tig.
erongitig.
hs.llehsinim_dna_hsab_erapmoc_lng
sedulcni
bil
elifekaM
llehsinim
txt.tuptuo_llehsinim
gnitsixe_ton
gnitsixeton
eliftuo
txt.tuptuo
dm.EMDAER
crs
txt.sdnammoc_tset
llehsinim_retset
eliftset
hs.stset
tset_ot
ppus.dnirglav
edocsv.

Commande: echo 0
0

Commande: exit 42


Commande: echo 0
0

Commande: exit 42hgzef
exit

Commande: echo 0
0

Commande: exit 42 jhgzegf
exit

Commande: echo 0
0

Commande: exit jhzef
exit

Commande: echo 0
0

Commande: ls -a
 
.
..
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
.git
.gitignore
gnl_compare_bash_and_minishell.sh
includes
lib
Makefile
minishell
minishell_output.txt
not_existing
notexisting
outfile
output.txt
README.md
src
test_commands.txt
tester_minishell
testfile
tests.sh
to_test
valgrind.supp
.vscode

Commande: echo 0
0

Commande: <noexist cat
No such file or directory: noexist

Commande: echo 0
0

Commande: bin/ls fichiernulachier
bin/ls: command not found

Commande: echo 0
0

Commande: echo 0 + 0
0 + 0

Commande: echo 0
0

Commande: ls includes
minishell.h
parsing
pipex_setup.h

Commande: echo 0
0

Commande: echo "cat lol.c | cat > lol.c"
cat lol.c | cat > lol.c

Commande: echo 0
0

Commande: ls inclu"des"
minishell.h
parsing
pipex_setup.h

Commande: echo 0
0

Commande: l's' '-'l
total 2040
-rw-rw-r-- 1 dan dan      27 févr. 20 08:52  
-rw-rw-r-- 1 dan dan   50859 févr.  2 14:22 allowed_functions.md
-rw-rw-r-- 1 dan dan   18875 févr. 20 11:10 bash_output.txt
-rwxrwxr-x 1 dan dan    7680 févr. 20 10:49 compare_bash_and_minishell.sh
-rw-rw-r-- 1 dan dan   27775 févr.  3 18:49 correct_output.txt
-rw-rw-r-- 1 dan dan   59401 févr.  3 15:52 diff_output.txt
-rw-rw-r-- 1 dan dan 1568461 janv. 26 11:52 en.subject.pdf
-rw-rw-r-- 1 dan dan   90973 févr. 14 14:11 eval_minishell.pdf
-rw-rw-r-- 1 dan dan       0 févr. 19 17:34 fichiernul
-rw-rw-r-- 1 dan dan       0 févr. 19 17:34 fichiernulachier
-rw-rw-r-- 1 dan dan    1793 févr. 20 10:49 file1
-rw-rw-r-- 1 dan dan       0 févr. 20 10:49 fileout
-rwxrwxr-x 1 dan dan    7860 févr. 19 18:48 gnl_compare_bash_and_minishell.sh
drwxrwxr-x 3 dan dan    4096 févr. 20 10:52 includes
drwxrwxr-x 5 dan dan    4096 janv. 25 09:42 lib
-rw-rw-r-- 1 dan dan    3059 févr. 20 11:10 Makefile
-rwxrwxr-x 1 dan dan  163752 févr. 20 11:10 minishell
-rw-rw-r-- 1 dan dan   11385 févr. 20 11:10 minishell_output.txt
-rw-rw-r-- 1 dan dan       6 févr. 14 13:32 not_existing
-rw-rw-r-- 1 dan dan     414 févr. 14 18:46 notexisting
-rw-rw-r-- 1 dan dan       0 févr. 20 10:49 outfile
-rw-rw-r-- 1 dan dan     126 févr. 14 14:07 output.txt
-rw-rw-r-- 1 dan dan     786 févr. 18 13:59 README.md
drwxrwxr-x 5 dan dan    4096 févr. 20 11:10 src
-rw-rw-r-- 1 dan dan     217 févr.  7 16:59 test_commands.txt
drwxrwxr-x 6 dan dan    4096 févr. 20 10:56 tester_minishell
-rw-rw-r-- 1 dan dan      38 févr. 19 09:59 testfile
-rwxrwxr-x 1 dan dan    2595 févr. 14 14:07 tests.sh
-rw-rw-r-- 1 dan dan    2866 févr. 14 13:32 to_test
-rw-rw-r-- 1 dan dan      70 févr.  2 14:22 valgrind.supp

Commande: echo 0
0

Commande: ls 
 
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
Makefile
minishell
minishell_output.txt
not_existing
notexisting
outfile
output.txt
README.md
src
test_commands.txt
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 'dan'
dan

Commande: echo 0
0

Commande: cat includes/minishell.h
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dan <dan@student.42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/12 08:59:03 by dan               #+#    #+#             */
/*   Updated: 2024/02/19 20:11:03 by dan              ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include <sys/wait.h>
# include <sys/types.h>
# include <signal.h>
# include <stdio.h>
# include <stdbool.h>
# include <stdio.h>
# include <unistd.h>
# include <stdlib.h>
# include "../lib/ft_printf/ft_printf.h"
# include "../lib/libft/libft.h"
// # include "../lib/get_next_line/get_next_line.h"
# include <readline/readline.h>
# include <readline/history.h>
# include "parsing_utils.h"

typedef struct t_Data
{
	char	**envp_tab;
	int		exit_status;
}	t_Data;

void	handle_signals(void);
int		prompt_loop(t_Data *data, char *envp[]);
void	display_error(char *str);
void	display_error_detail(char *str, char *details, char *str2);
void	free_data(t_Data *data);
void	close_minishell(t_Data *data);
void	exec_env(t_Data *data, char **command_tab);
int		command_is_builtin(char	*cmd[], t_Data *data, char *envp[]);
void	exec_pwd(t_Data *data);
int		exec_cd(t_Data *data, char **command_tab);
void	exec_echo(t_Data *data, char **command_tab);
void	exec_unset(t_Data *data, char **command_tab);
void	free_command_tab(char **command_tab);
char	**duplicate_envp(t_Data *data, char *envp[]);
int		exec_export(char **command_tab, t_Data *data);

/*   exec_export.c                                  :+:      :+:    :+:   */
void	add_env_var_to_envp_tab(char **command_tab, t_Data *data, int *i);
char	**create_new_env_var(char **envp, char *env_var);
char	*get_env_var(t_Data *data, char *to_find);
void	display_export_tab(char export_tab[][500]);
void	create_export_tab(t_Data *data, char export_tab[][500]);

/*   exec_echo.c                                  :+:      :+:    :+:   */
int	is_only_space(char *str);

/*   exec_exit.c                                  :+:      :+:    :+:   */
int	str_is_digit(char *str);

/*   exec_unset.c                                  :+:      :+:    :+:   */
void	unset_var(char **envp, int index);


void		free_command_tab_lg(char ***command_tab);
int			pipex(char **argv[], char *envp[]);
t_ast_nde	*copy_node_child(t_ast_nde *node);

/*   exec_pipex.c                                       :+:      :+:    :+:   */
char		**parse_cmd(char **command, char **env);
t_ast_nde	*parse(char *str, t_Data *data);
void		launch_command_tab(t_Data *data, t_ast_nde *node,
				char *envp[], int flag);
int			wilcard_func(char *pattern);


/*   handle_signals.c                                   :+:      :+:    :+:   */
static void	sigint_handler(int signum);
static void	sigquit_handler(int signum);
#endif

Commande: echo 0
0

Commande: echo 0
0

Commande: echo papa >> file1


Commande: echo 0
0

Commande: echo maman >> file1


Commande: echo 0
0

Commande: cat file1
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
maman
papa
maman
papa
maman
papa
maman
papa
papa
maman
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman
papa
papa
maman
maman

Commande: echo 0
0

Commande: cat file1 | grep papa | more
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa
papa

Commande: echo 0
0

Commande: << end cat|>fileout
heredoc> warning: here-document at line 1 delimited by end-of-file (wanted 'end')

Commande: echo 0
0

Commande: ls fichiernul | grep bla | more


Commande: echo 0
0

Commande: export VAR=tamaman


Commande: echo 0
0

Commande: echo 


Commande: echo 0
0

Commande: echo 


Commande: unset VAR


Commande: echo 0
0

Commande: echo 


Commande: echo 0
0

Commande: unset PATH


Commande: echo 0
0

Commande: ls
 
allowed_functions.md
bash_output.txt
compare_bash_and_minishell.sh
correct_output.txt
diff_output.txt
en.subject.pdf
eval_minishell.pdf
fichiernul
fichiernulachier
file1
fileout
gnl_compare_bash_and_minishell.sh
includes
lib
Makefile
minishell
minishell_output.txt
not_existing
notexisting
outfile
output.txt
README.md
src
test_commands.txt
tester_minishell
testfile
tests.sh
to_test
valgrind.supp

Commande: echo 0
0

Commande: cd ..


Commande: pwd
/home/dan/42/minishell_common

Commande: echo 0
0

Commande: cd


Commande: echo 0
0

Commande: pwd
/home/dan/42/minishell_common

Commande: echo 0
0

Commande: pwd kzbgkbzekgb
/home/dan/42/minishell_common

Commande: echo 0
0

Commande: pwd kzbg  kbzekgb
/home/dan/42/minishell_common

Commande: echo 0
0

Commande: pwd 42 bzekgb
/home/dan/42/minishell_common

Commande: echo 0
0

Commande: cat includes/minishell.h
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dan <dan@student.42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/12 08:59:03 by dan               #+#    #+#             */
/*   Updated: 2024/02/19 20:11:03 by dan              ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include <sys/wait.h>
# include <sys/types.h>
# include <signal.h>
# include <stdio.h>
# include <stdbool.h>
# include <stdio.h>
# include <unistd.h>
# include <stdlib.h>
# include "../lib/ft_printf/ft_printf.h"
# include "../lib/libft/libft.h"
// # include "../lib/get_next_line/get_next_line.h"
# include <readline/readline.h>
# include <readline/history.h>
# include "parsing_utils.h"

typedef struct t_Data
{
	char	**envp_tab;
	int		exit_status;
}	t_Data;

void	handle_signals(void);
int		prompt_loop(t_Data *data, char *envp[]);
void	display_error(char *str);
void	display_error_detail(char *str, char *details, char *str2);
void	free_data(t_Data *data);
void	close_minishell(t_Data *data);
void	exec_env(t_Data *data, char **command_tab);
int		command_is_builtin(char	*cmd[], t_Data *data, char *envp[]);
void	exec_pwd(t_Data *data);
int		exec_cd(t_Data *data, char **command_tab);
void	exec_echo(t_Data *data, char **command_tab);
void	exec_unset(t_Data *data, char **command_tab);
void	free_command_tab(char **command_tab);
char	**duplicate_envp(t_Data *data, char *envp[]);
int		exec_export(char **command_tab, t_Data *data);

/*   exec_export.c                                  :+:      :+:    :+:   */
void	add_env_var_to_envp_tab(char **command_tab, t_Data *data, int *i);
char	**create_new_env_var(char **envp, char *env_var);
char	*get_env_var(t_Data *data, char *to_find);
void	display_export_tab(char export_tab[][500]);
void	create_export_tab(t_Data *data, char export_tab[][500]);

/*   exec_echo.c                                  :+:      :+:    :+:   */
int	is_only_space(char *str);

/*   exec_exit.c                                  :+:      :+:    :+:   */
int	str_is_digit(char *str);

/*   exec_unset.c                                  :+:      :+:    :+:   */
void	unset_var(char **envp, int index);


void		free_command_tab_lg(char ***command_tab);
int			pipex(char **argv[], char *envp[]);
t_ast_nde	*copy_node_child(t_ast_nde *node);

/*   exec_pipex.c                                       :+:      :+:    :+:   */
char		**parse_cmd(char **command, char **env);
t_ast_nde	*parse(char *str, t_Data *data);
void		launch_command_tab(t_Data *data, t_ast_nde *node,
				char *envp[], int flag);
int			wilcard_func(char *pattern);


/*   handle_signals.c                                   :+:      :+:    :+:   */
static void	sigint_handler(int signum);
static void	sigquit_handler(int signum);
#endif

Commande: echo 0
0

Commande: cat ../../42/minishell_common/includes/minishell.h
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   minishell.h                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dan <dan@student.42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/12 08:59:03 by dan               #+#    #+#             */
/*   Updated: 2024/02/19 20:11:03 by dan              ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MINISHELL_H
# define MINISHELL_H

# include <sys/wait.h>
# include <sys/types.h>
# include <signal.h>
# include <stdio.h>
# include <stdbool.h>
# include <stdio.h>
# include <unistd.h>
# include <stdlib.h>
# include "../lib/ft_printf/ft_printf.h"
# include "../lib/libft/libft.h"
// # include "../lib/get_next_line/get_next_line.h"
# include <readline/readline.h>
# include <readline/history.h>
# include "parsing_utils.h"

typedef struct t_Data
{
	char	**envp_tab;
	int		exit_status;
}	t_Data;

void	handle_signals(void);
int		prompt_loop(t_Data *data, char *envp[]);
void	display_error(char *str);
void	display_error_detail(char *str, char *details, char *str2);
void	free_data(t_Data *data);
void	close_minishell(t_Data *data);
void	exec_env(t_Data *data, char **command_tab);
int		command_is_builtin(char	*cmd[], t_Data *data, char *envp[]);
void	exec_pwd(t_Data *data);
int		exec_cd(t_Data *data, char **command_tab);
void	exec_echo(t_Data *data, char **command_tab);
void	exec_unset(t_Data *data, char **command_tab);
void	free_command_tab(char **command_tab);
char	**duplicate_envp(t_Data *data, char *envp[]);
int		exec_export(char **command_tab, t_Data *data);

/*   exec_export.c                                  :+:      :+:    :+:   */
void	add_env_var_to_envp_tab(char **command_tab, t_Data *data, int *i);
char	**create_new_env_var(char **envp, char *env_var);
char	*get_env_var(t_Data *data, char *to_find);
void	display_export_tab(char export_tab[][500]);
void	create_export_tab(t_Data *data, char export_tab[][500]);

/*   exec_echo.c                                  :+:      :+:    :+:   */
int	is_only_space(char *str);

/*   exec_exit.c                                  :+:      :+:    :+:   */
int	str_is_digit(char *str);

/*   exec_unset.c                                  :+:      :+:    :+:   */
void	unset_var(char **envp, int index);


void		free_command_tab_lg(char ***command_tab);
int			pipex(char **argv[], char *envp[]);
t_ast_nde	*copy_node_child(t_ast_nde *node);

/*   exec_pipex.c                                       :+:      :+:    :+:   */
char		**parse_cmd(char **command, char **env);
t_ast_nde	*parse(char *str, t_Data *data);
void		launch_command_tab(t_Data *data, t_ast_nde *node,
				char *envp[], int flag);
int			wilcard_func(char *pattern);


/*   handle_signals.c                                   :+:      :+:    :+:   */
static void	sigint_handler(int signum);
static void	sigquit_handler(int signum);
#endif

Commande: echo 0
0

Commande: <testfile cat | rev > outfile


Commande: echo 0
0

Commande: cat <testfile
test
motif olala
motif nononon
pôuet

Commande: echo 0
0

Commande: <outfile cat
tset
alalo fitom
nononon fitom
teuôp

Commande: echo 0
0

Commande: <testfile cat | echo niania | rev > outfile


Commande: echo 0
0

Commande: <outfile cat
ainain

Commande: echo 0
0

Commande: <testfile cat | echeo niania | rev > outfile
echeo: command not found

Commande: echo 0
0

Commande: <outfile cat


Commande: echo 0
0

Commande: echo aaa && echo bbb || echo ccc
aaa
bbb

Commande: echo 0
0

Commande: echo aaa || echo bbb || echo ccc
aaa

Commande: echo 0
0

Commande: echo 0
0

Commande: false && echo bbb || echo ccc
ccc

Commande: echo 0
0

Commande: false || echo bbb || echo ccc
bbb

Commande: echo 0
0

Commande: false && echo bbb && echo ccc


Commande: echo 0
0

Commande: echo aaa && false && echo ccc
aaa

Commande: echo 0
0

Commande: <<end <<end
heredoc> warning: here-document at line 1 delimited by end-of-file (wanted 'end')
heredoc> warning: here-document at line 1 delimited by end-of-file (wanted 'end')

Commande: <<end cat
heredoc> warning: here-document at line 1 delimited by end-of-file (wanted 'end')

Commande: <<end
heredoc> warning: here-document at line 1 delimited by end-of-file (wanted 'end')

Commande: echo 0
0

Commande: echo /bin/bash
/bin/bash

Commande: echo 0
0

Commande: echo dan/bin/bash$
dan/bin/bash$

Commande: echo 0
0

Commande: echo dan/bin/bash
dan/bin/bash

Commande: echo 0
0

Commande: echo dan   /bin/bash $
dan /bin/bash $

Commande: echo 0
0

Commande: echo 'dan/bin/bash$'
dan/bin/bash$

Commande: echo 0
0

Commande: echo dan /bin/bash $ 
dan /bin/bash $

Commande: echo 0
0

Commande: echo dan/bin/bash
dan/bin/bash

Commande: echo 0
0

Commande: echo "dan$  SHELL $ "
dan$  SHELL $ 

Commande: echo 0
0

Commande: echo "trrtdan$   SHELL $ "
trrtdan$   SHELL $ 

Commande: echo 0
0

Commande: echo "trrtdan   SHELL $ "
trrtdan   SHELL $ 

Commande: echo 0
0

Commande: echo "trrtdan SHELL $ "
trrtdan SHELL $ 

Commande: echo 0
0

Commande: echo trrtdan$   SHELL $ 
trrtdan$ SHELL $

Commande: echo 0
0

Commande: echo "trrtdan'Mach' $'LOGNAME'  SHELL $ "
trrtdan'Mach' $'LOGNAME'  SHELL $ 

Commande: echo 0
0

Commande: echo "trrt'Mach' dan'Mach' $'LOGNA'M''E'  SHELL $ "
trrt'Mach' dan'Mach' $'LOGNA'M''E'  SHELL $ 

Commande: echo 0
0

Commande: echo "trrt'Mach'p loudan'Mach' $'LOGNA'M''E'42  SHELL $ "
trrt'Mach'p loudan'Mach' $'LOGNA'M''E'42  SHELL $ 

Commande: echo 0
0

Commande: echo "dan"
dan

Commande: echo 0
0

Commande: echo dan
dan

Commande: echo 0
0

